generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id          String         @id @default(uuid())
  email       String?        @unique
  role        String         @default("USER")
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  refreshTokens RefreshToken[]
  projects    Project[]
  sharedProjects Project[] @relation("SharedProjects")
  
  // Każdy User może mieć wiele sposobów logowania
  authAccounts AuthAccount[]
}

model AuthAccount {
  id                String   @id @default(uuid())
  provider          String   // "local", "google", "github", "custom-oidc" itp.
  providerAccountId String   // identyfikator użytkownika w danym providerze (np. email, sub)
  
  // hasło (tylko local) – przy innych providerach może być null
  password          String?

  userId    String
  user      User     @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([provider, providerAccountId]) 
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id])
}

model Project {
  id         String   @id @default(uuid())
  title      String
  description String?
  archived   Boolean  @default(false)
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  sharedWith User[]   @relation("SharedProjects")
  files      File[]

  @@index([userId])
}

model File {
  id        String   @id @default(uuid())
  filename  String
  mimeType  String?
  projectId String
  project   Project  @relation(fields: [projectId], references: [id])
  parentId  String?
  parent    File?    @relation("SubFiles", fields: [parentId], references: [id])
  children  File[]   @relation("SubFiles")
  createdAt DateTime @default(now())
  isDirectory Boolean @default(false)

  @@index([projectId])
  @@unique([projectId, parentId, filename])
}